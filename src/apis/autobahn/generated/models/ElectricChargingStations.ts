/* tslint:disable */
/* eslint-disable */
/**
 * Autobahn App API
 * Was passiert auf Deutschlands Bundesstraßen? API für aktuelle Verwaltungsdaten zu Baustellen, Staus und Ladestationen. Außerdem Zugang zu Verkehrsüberwachungskameras und vielen weiteren Datensätzen. 
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ElectricChargingStation } from './ElectricChargingStation';
import {
    ElectricChargingStationFromJSON,
    ElectricChargingStationFromJSONTyped,
    ElectricChargingStationToJSON,
} from './ElectricChargingStation';

/**
 * 
 * @export
 * @interface ElectricChargingStations
 */
export interface ElectricChargingStations {
    /**
     * 
     * @type {Array<ElectricChargingStation>}
     * @memberof ElectricChargingStations
     */
    electricChargingStation?: Array<ElectricChargingStation>;
}

/**
 * Check if a given object implements the ElectricChargingStations interface.
 */
export function instanceOfElectricChargingStations(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ElectricChargingStationsFromJSON(json: any): ElectricChargingStations {
    return ElectricChargingStationsFromJSONTyped(json, false);
}

export function ElectricChargingStationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ElectricChargingStations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'electricChargingStation': !exists(json, 'electric_charging_station') ? undefined : ((json['electric_charging_station'] as Array<any>).map(ElectricChargingStationFromJSON)),
    };
}

export function ElectricChargingStationsToJSON(value?: ElectricChargingStations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'electric_charging_station': value.electricChargingStation === undefined ? undefined : ((value.electricChargingStation as Array<any>).map(ElectricChargingStationToJSON)),
    };
}

